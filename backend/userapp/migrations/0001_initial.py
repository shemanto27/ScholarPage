# Generated by Django 5.1.7 on 2025-03-28 19:19

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement', models.CharField(blank=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education', models.CharField(blank=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Research_Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_interests', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skills', models.CharField(blank=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Work_Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_experience', models.CharField(blank=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('publication_type', models.CharField(choices=[('JOURNAL', 'Journal'), ('CONFERENCE', 'Conference'), ('BOOK', 'Book'), ('THESIS', 'Thesis'), ('PROJECT', 'Project'), ('OTHER', 'Other')], default='JOURNAL', max_length=15)),
                ('description', models.TextField(max_length=250)),
                ('status', models.CharField(choices=[('PUBLISHED', 'Published'), ('WORKING ON IT', 'Working on it'), ('SUBMITTED', 'Submitted'), ('DISCONTINUED', 'Discontinued')], default='PUBLISHED', max_length=15)),
                ('published_year', models.DateField(blank=True, null=True)),
                ('link', models.URLField()),
                ('tags', models.ManyToManyField(related_name='publications', to='userapp.tag')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('full_name', models.CharField(blank=True, max_length=50)),
                ('bio', models.TextField(blank=True, max_length=200)),
                ('profile_pic', models.ImageField(blank=True, upload_to='user_profile_pics/')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=15)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('achievements', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='userapp.achievement')),
                ('education', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='userapp.education')),
                ('location', models.ManyToManyField(blank=True, to='userapp.location')),
                ('publications', models.ManyToManyField(blank=True, related_name='users', to='userapp.publication')),
                ('research_interest', models.ManyToManyField(blank=True, related_name='users', to='userapp.research_interest')),
                ('skills', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='userapp.skills')),
                ('work_experience', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='userapp.work_experience')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
